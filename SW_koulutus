1. Koulutus - 8.1.2019
======================

Agenda
======
- Python perusteita: data tyypit & muuttujat, stringit, operaattorit, ehtolausekkeet (if-else), loopit, listat
- Tavoitteena saada perusteet haltuun Pythonin osalta 
- Materiaalit & harjoitukset
  - https://www.learnpython.org
  - https://www.hackerrank.com

Harjoitukset
============
- Arithmetic Operators: https://www.hackerrank.com/challenges/python-arithmetic-operators/problem
- Python if-else: https://www.hackerrank.com/challenges/py-if-else/problem
- Division: https://www.hackerrank.com/challenges/python-division/problem
- Loops: https://www.hackerrank.com/challenges/python-loops/problem
- String split and join: https://www.hackerrank.com/challenges/python-string-split-and-join/problem
- Find a string: https://www.hackerrank.com/challenges/find-a-string/problem

2. Koulutus - 16.1.2019
=======================

Agenda
======
- Python perusteita jatkuu: kertaus & funktiot
- Lottopeli harjoituksena
  - Vaatimusten pilkkominen eri funktioiksi
      - Lottopelin perusvaatimukset
         - Pitää pystyä arpomaan seitsemän eri numeroa sisältävä lottorivi (numerot välillä 1...39)
         - Kysyä käyttäjältä käyttäjän oma lottorivi tai arpoa käyttäjälle valmis
         - Pitää pystyä tarkistamaan kuinka monta arvoa on oikein arvotun ja annetun rivin välillä
- Jakaudutaan pareiksi
  - Juha & Pasi
  - Tuomo & Janne
  - Tero & Marko
- Harjoitukset
  - Ohjelmistokehitys ympäristö pystyyn
      - Gitin asentaminen & käyttöönotto
         - https://git-scm.com/download/win
         - https://www.atlassian.com/git/tutorials
         - Koulutuksen Git repo
            - https://github.com/tenordst/sade_sw_training.git   
         - Git versiohallinnan perusteita
            - https://www.atlassian.com/git/tutorials/what-is-version-control
         - Harjoitus
            - Lisää oma hakemisto
            - Lisää omaan hakemistoon Pythonilla tehty Hello World jossa Hello World tehdään funktiossa
            - Lisää tiedosto git repositoryyn
            - Muuta ohjelmaa niin, että Hello World sijaan Hello SADE!
            - Tee commit ja puske se git repooon
            - Hae muiden tekemät muutokset      
      - Visual Studio Code
         - Website: https://code.visualstudio.com/
         - Python tools: https://marketplace.visualstudio.com/items?itemName=ms-python.python
   - Lottopelin tekeminen funktioilla
      - Random number: https://www.pythoncentral.io/how-to-generate-a-random-number-in-python/

3. Koulutus - 22.1.2019
=======================
- Debuggaus
  - Logitus vs. debugger
  - Debugger perusteet
- Lottopeli harjoituksena
  - Vaatimusten pilkkominen eri funktioiksi
      - Lottopelin perusvaatimukset
         - Pitää pystyä arpomaan seitsemän eri numeroa sisältävä lottorivi (numerot välillä 1...39) -> DONE
         - Kysyä käyttäjältä käyttäjän oma lottorivi tai arpoa käyttäjälle valmis rivi
         - Pitää pystyä tarkistamaan kuinka monta arvoa on oikein arvotun ja annetun rivin välillä
         - Lisävaatimus: Tee tuki 8 ja 9 luvun järjestelmälle
- Lottopelin tekeminen funktioilla
   - Random number: https://www.pythoncentral.io/how-to-generate-a-random-number-in-python/
- Kotitehtävä
   - Lisää lottoon seuraavat ominaisuudet
      - Mahdollisuus määritellä montako kertaa lottoarvonta tehdään
      - Yhteenveto siitä kuinka monta kertaa x oikein löytyi kaikkien arvontojen osalta

4. Koulutus - 30.1.2019
=======================
- Object Oriented Programming (OOP) aka olio-ohjelmointi Pythonilla
   - https://realpython.com/python3-object-oriented-programming/
   - Luokat ja oliot
   - Olioiden luominen
   - Olio- ja luokkamuuttujat
   - Luokan metodit/funktiot
- Harjoitus 
   - Lottopelin muuttaminen olio-ohjelmoinnin perusteiden mukaiseksi
      - Mistä luokista/olioista lotto voisi koostua? Mitä dataa (= muuttujia) ja toimintoja kussakin luokassa pitäisi olla?
         - Lottokone
            * arvo_rivi() => Lottorivi olio
         - Lottorivi
            - pituus (luokan attribuutti)
            - rivi (instance attribuutti)
            * tulosta() => string
            * lisaa_numero(numero) => True/False (boolean)
            * vertailu(toinen_rivi) => oikein (int)
         - Kayttaja
            - nimi (instance attribuutti)
            * anna_rivi() => Lottorivi olio
            * arvo_rivi() => Lottorivi olio
         - Tarkistaja
            - potti (instance attribuutti)
            * kerro_tulos(kayttaja, rivi_a, rivi_b)
   - Kotitehtävä 
      - Implementoi yllä olevan speksin mukainen luokkarakenne ja metodit
      - Tee main funktio joka
         1) Arpoo voittorivin Lottokoneella
         2) Pyytää käyttäjältä rivin Kayttaja olion avulla
         3) Pyytää Tarkistaja oliota kertomaan mikä oli tulosta
      - Teron hakemiston alla esimerkkiä jos tarvitsee apuja
   - Lisätehtävä
      - Arvo voittorivi Lottokoneella
      - Pyydä käyttäjältä yksi rivi
      - Arvo 100000 muulle käyttäjälle oma rivi
      - Anna arvottu voittorivi, itse annettu rivi + 100000 muiden käyttäjien riviä Tarkistajalle
      - Tarkistaja laskee kaikkien käyttäjien rivien tulokset, määrittelee voittopotin per x oikein ja kertoo itse annetun rivin osalta paljonko voittoa tuli
         - Voittopotin voi määritellä vaikka niin, että
            - 80% voitosta jaetaan 7 oikein saaneille
            - 10% voitosta jaetaan 6 oikein saaneille
            - 5% voitosta jaetaan 5 oikein saaneille
            - 3% voitosta jaetaan 4 oikein saaneille
            - 2% voitosta jaetaan 3 oikein saaneille

5. Koulutus - 5.2.2019
=======================
- Olio-ohjelmoinnin jatko
   - Perintä/inheritance
      - https://realpython.com/python3-object-oriented-programming/#python-object-inheritance
   - Data encapsulation
      - https://www.python-course.eu/python3_object_oriented_programming.php
      - Public, protected ja private instance attribuutit/muuttujat
   - Destructor/olioiden tuhominen
- Moduulit ja sisäänrakennetut kirjastot
   - https://www.learnpython.org/en/Modules_and_Packages
   - https://docs.python.org/3/library/
- Harjoitus
   - Nibe lämpöpumpun logien analysointi
      - Vaatimukset
         - Kustakin päivittäisestä logitiedosta muodostetaan .png kuvaaja jossa näkyy eri parametrit visualisoituna kuvaajana
         - Muodostetaan myös kuukausikohtainen summary kuvaaja josta näkyy per päivä halutut arvot
            - Käynnistyskerrat
      - Luokkarakenne
      - Log .csv tiedoston lataaminen olioon, tarvittavia moduuleja/luokkia
         - csv
         - numpy
         - panda
         - matplotlib


6. Koulutus - 13.2.2019
=======================
- Olio-ohjelmoinnin jatko
   - Perintä/inheritance & data encapsulation kertaus
      - https://realpython.com/python3-object-oriented-programming/#python-object-inheritance
      - https://www.python-course.eu/python3_object_oriented_programming.php
   - Rajapinnat/interfaces pythonilla
      - http://masnun.rocks/2017/04/15/interfaces-in-python-protocols-and-abcs/
   - UML ja luokkakaaviot
      - https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/index.html
      - https://www.draw.io
- Harjoitus
   - Nibe lämpöpumpun logien analysointi
      - Vaatimukset
         - Kustakin päivittäisestä logitiedosta muodostetaan .png kuvaaja jossa näkyy eri parametrit visualisoituna kuvaajana
         - Muodostetaan myös kuukausikohtainen summary kuvaaja josta näkyy per päivä halutut arvot
            - Käynnistyskerrat
      - Luokkarakenne
      - Log .csv tiedoston lataaminen olioon, tarvittavia moduuleja/luokkia
         - csv
         - numpy
         - panda
         - matplotlib
- Miten jatketaan
   - Keskitytään enemmän harjoitusten tekemiseen yhdessä vs. opiskellaan uusia asiota + oletetaan että harjoituksen tehdään omalla ajalla?
   - Python vs. C/C++ vs. jokin muu kieli
   - Algoritmit & tietorakenteet
   - Web UI kehitys, backend kehitys, machine learning, jne?


7. Koulutus - 26.2.2019
=======================
- Agenda
   - Ei uusia asioita, kerrataan Python perusteita + tehdään alla olevia harjoituksia
  - https://www.learnpython.org
- Harjoituksia
   - Lottopelin tekeminen
      - Vaatimukset
         - Pitää pystyä arpomaan seitsemän eri numeroa sisältävä lottorivi (numerot välillä 1...39)
         - Kysyä käyttäjältä käyttäjän oma lottorivi tai arpoa käyttäjälle valmis rivi
         - Pitää pystyä tarkistamaan kuinka monta arvoa on oikein arvotun ja annetun rivin välillä
      - Mistä luokista/olioista lotto voisi koostua? Mitä dataa (= muuttujia) ja toimintoja kussakin luokassa pitäisi olla?
         - Lottokone
            * arvo_rivi() => Lottorivi olio
         - Lottorivi
            - pituus (luokan attribuutti)
            - rivi (instance attribuutti)
            * tulosta() => string
            * lisaa_numero(numero) => True/False (boolean)
            * vertailu(toinen_rivi) => oikein (int)
         - Kayttaja
            - nimi (instance attribuutti)
            * anna_rivi() => Lottorivi olio
            * arvo_rivi() => Lottorivi olio
         - Tarkistaja
            - potti (instance attribuutti)
            * kerro_tulos(kayttaja, rivi_a, rivi_b)
   - Nibe lämpöpumpun logien analysointi
      - Vaatimukset
         - Kustakin päivittäisestä logitiedosta muodostetaan .png kuvaaja jossa näkyy eri parametrit visualisoituna kuvaajana
         - Muodostetaan myös kuukausikohtainen summary kuvaaja josta näkyy per päivä halutut arvot
            - Käynnistyskerrat
      - Luokkarakenne
      - Log .csv tiedoston lataaminen olioon, tarvittavia moduuleja/luokkia
         - numpy
            - Yleinen matematiikkakirjasto
         - panda
            - Kirjasto csv tiedostojen käsittelyyn
         - matplotlib
            - Kirjasto diagrammien piirtämiseksi


8. Koulutus - 5.3.2019
======================

Agenda
======
- Vanhojen harjoitusten jatkaminen + Hacker Rank harjoitusten tekeminen
  - https://www.learnpython.org
  - https://www.hackerrank.com
- Seuraavien kertojen sisältö

Harjoitukset
============
- Kts edellisen kerran Lotto & Lämpöpumppu
- Hacker Rank
   - Arithmetic Operators: https://www.hackerrank.com/challenges/python-arithmetic-operators/problem
   - Python if-else: https://www.hackerrank.com/challenges/py-if-else/problem
   - Division: https://www.hackerrank.com/challenges/python-division/problem
   - Loops: https://www.hackerrank.com/challenges/python-loops/problem
   - String split and join: https://www.hackerrank.com/challenges/python-string-split-and-join/problem
   - Find a string: https://www.hackerrank.com/challenges/find-a-string/problem
   - Write a function: https://www.hackerrank.com/challenges/write-a-function/problem   
- 



         